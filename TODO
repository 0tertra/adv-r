# Advanced programming

Priorities for class (June 8-9):
  * Computing on the language
  * S3, S4, R5
  * Flesh out development process
  * Documentation & namespaces
  * Unit testing (rewrite for this audience)
  * Package release
  * Performance and profiling

* CotL: parser package
* CotL: srcrefs
* E&D
* Evaluation: more exercises
* FCF: tweaks
* Lazy eval: move lazy arguments to scoping and kill chapter
* P&P
* Prereqs: skim R cookbook
* R5
* Rcpp
* S3: better example
* S3: group generics
* S4: better example
* S4: group generics
* Scoping: local
* Scoping: namespaces
* Scoping: dynamic

* Advanced functions?
  * do.call?
  * default arguments and evaluation rules
* Recursive data structures: lists, pairlists, calls, expressions, environments, closures'

* Review

Exercises for every chapter.


# OO ideas

* modelling distributions, sums, products etc.
* some sort of simulation
* R5: gui's
* data transformations
* generally, something about how you break down a problem into classes
* math, science, statistics, graphics
* where do I use it: scales, layers, lubridate, 
* 